package domain;
// Generated 08-may-2019 9:56:30 by Hibernate Tools 5.4.1.Final

import javax.xml.bind.annotation.adapters.XmlAdapter;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

/**
 * AlineazioaId generated by hbm2java
 */
@SuppressWarnings("serial")
@XmlAccessorType(XmlAccessType.FIELD)
@Entity
public class AlineazioaId implements java.io.Serializable {

	@XmlID
	@XmlJavaTypeAdapter(IntegerAdapter.class)
	@Id
	@GeneratedValue
	private int idErabiltzailea;
	
	@XmlID
	@XmlJavaTypeAdapter(IntegerAdapter.class)
	@Id
	@GeneratedValue
	private int mota;//0-> unekoa, 1-> gordea, 2-> publikoa

	public AlineazioaId() {
	}

	public AlineazioaId(int idErabiltzailea, int mota) {
		this.idErabiltzailea = idErabiltzailea;
		this.mota = mota;
	}

	public int getIdErabiltzailea() {
		return this.idErabiltzailea;
	}

	public void setIdErabiltzailea(int idErabiltzailea) {
		this.idErabiltzailea = idErabiltzailea;
	}

	public int getMota() {
		return this.mota;
	}

	public void setMota(int mota) {
		this.mota = mota;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof AlineazioaId))
			return false;
		AlineazioaId castOther = (AlineazioaId) other;

		return (this.getIdErabiltzailea() == castOther.getIdErabiltzailea()) && (this.getMota() == castOther.getMota());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getIdErabiltzailea();
		result = 37 * result + this.getMota();
		return result;
	}

}
class AlineazioaIdAdapter extends XmlAdapter<String, AlineazioaId> {
    
    public AlineazioaId unmarshal(String s) {
    	return new AlineazioaId(Integer.parseInt(s.split("_")[0]),Integer.parseInt(s.split("_")[1]));
    }

	@Override
	public String marshal(AlineazioaId v) throws Exception {
		if (v == null) return "";
		
		return v.getIdErabiltzailea()+"_"+v.getMota();
	}
}
